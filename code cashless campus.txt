#include <LiquidCrystal.h>
LiquidCrystal lcd(12, 11, 7, 6, 5, 4);
#include <Adafruit_Fingerprint.h>
#include <SoftwareSerial.h>

int getFingerprintIDez();
SoftwareSerial mySerial(2, 3);// tx, rx
//////////////////////
#include <Keypad.h>

const byte ROWS = 8; //four rows
const byte COLS = 8; //four columns
//define the cymbols on the buttons of the keypads
char hexaKeys[ROWS][COLS] = {
 {'a','b','c','d','e','f','g','h'},
 {'i','j','k','l','m','n','o','p'},
 {'q','r','s','t','u','v','w','x'},
 {'y','z','A','B','C','D','E','F'},
 {'G','H','I','J','K','L','M','N'},
 {'O','P','Q','R','S','T','U','V'},
 {'W','X','Y','Z','(',')','0','1'},
 {'2','3','4','5','6','7','8','9'}
};
byte rowPins[ROWS] = {4, 5, 6, 7,  8, 9, 10, 11}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {14, 15, 16, 17,  18, 19, 20 , 21}; //connect to the column pinouts of the keypad

//initialize an instance of class NewKeypad
Keypad customKeypad = Keypad( makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS); 

int  val;

const int buttonPin8 = 8;     // the number of the pushbutton pin
int buttonState8 = 0;         // variable for reading the pushbutton status

//////////////////////////////
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);


 void doorOpen()

{
  lcd.clear();
  lcd.print("WELOME");
  if(finger.fingerID==1)
  
   Serial.println("Mr.Nand");//i enroled ID no 1 as Nidhi'sfingerprint, so used this line to display corresponding name
  
  lcd.setCursor(0, 1);
  lcd.print("Chashless band");
  delay(1000);
 
  
              
    
     


       if(finger.fingerID==2)
  
  {
 
  lcd.setCursor(0, 1);
  lcd.print("ID matched");
  delay(1000);
  lcd.clear();
  lcd.setCursor(0, 1);
  lcd.print("Please enter ");
  delay(10);
  lcd.clear();

  lcd.print("the amount");
  delay(1000);

 char customKey = customKeypad.getKey();
Serial.println(customKey);


               
        
       }



        if(finger.fingerID==3)
  
  {
  
   
        lcd.setCursor(0, 1);
  lcd.print("ID matched");
  delay(1000);
  lcd.clear();
  lcd.setCursor(0, 1);
  lcd.print("Please enter ");
  delay(10);
  lcd.clear();

  lcd.print("the amount");
  delay(1000);

 char customKey = customKeypad.getKey();
Serial.println(customKey);        
    
        
       }

        if(finger.fingerID==4)
  
  {
 
              
      lcd.setCursor(0, 1);
  lcd.print("ID matched");
  delay(1000);
  lcd.clear();
  lcd.setCursor(0, 1);
  lcd.print("Please enter ");
  delay(10);
  lcd.clear();

  lcd.print("the amount");
  delay(1000);

 char customKey = customKeypad.getKey();
Serial.println(customKey);
        
       }

        if(finger.fingerID==5)
  
  {
  
      lcd.setCursor(0, 1);
  lcd.print("ID matched");
  delay(1000);
  lcd.clear();
  lcd.setCursor(0, 1);
  lcd.print("Please enter ");
  delay(10);
  lcd.clear();

  lcd.print("the amount");
  delay(1000);

 char customKey = customKeypad.getKey();
Serial.println(customKey);
        
       }



        if(finger.fingerID==6)
  
  {
  
              
      lcd.setCursor(0, 1);
  lcd.print("ID matched");
  delay(1000);
  lcd.clear();
  lcd.setCursor(0, 1);
  lcd.print("Please enter ");
  delay(10);
  lcd.clear();

  lcd.print("the amount");
  delay(1000);

 char customKey = customKeypad.getKey();
Serial.println(customKey);
        
       }


   
}
   
 

 





void setup()  
{

    pinMode(buttonPin8, INPUT);//// input sense
    
    pinMode(9,OUTPUT);  
   
    digitalWrite(9,HIGH);
 
  lcd.begin(16, 2);
  Serial.begin(38400);
  Serial.println("fingertest");
  finger.begin(57600);
  pinMode(8,OUTPUT);//Pin connectet to relay
  
  if (finger.verifyPassword())
  {
    Serial.println("Found fingerprint sensor!");
  } else {
    Serial.println("Did not find fingerprint sensor :(");
    lcd.print("Sensor not Found");
    while (1);
  }
  Serial.println("No  finger found,waiting for valid finger...");
  lcd.print("  No  finger");
  lcd.setCursor(0, 1);
  lcd.print("on the sensor");
  }

  
  
  void loop()                     // run over and over again
{
      
  if(getFingerprintIDez()>=0)
  {
        buttonState8 = digitalRead(buttonPin8);//sense button
        
        doorOpen();
        delay(1000);
        lcd.clear();
        doorClose();
  }
  
    
}
uint8_t getFingerprintID()
{
  uint8_t p = finger.getImage();
  switch (p)
  {
    case FINGERPRINT_OK:
      Serial.println("Image taken");
      break;
    case FINGERPRINT_NOFINGER:
      Serial.println("No finger detected");
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Communication error");
      return p;
    case FINGERPRINT_IMAGEFAIL:
      Serial.println("Imaging error");
      return p;
        default:
      Serial.println("Unknown error");
      return p;
  }

  // OK success!

  p = finger.image2Tz();
  switch (p) 
  {
    case FINGERPRINT_OK:
      Serial.println("Image converted");
      break;
    case FINGERPRINT_IMAGEMESS:
      Serial.println("Image too messy");
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Communication error");
      return p;
    case FINGERPRINT_FEATUREFAIL:
      Serial.println("Could not find fingerprint features");
      return p;
    case FINGERPRINT_INVALIDIMAGE:
      Serial.println("Could not find fingerprint features");
      return p;
    default:
      Serial.println("Unknown error");
      return p;
  }
  
  // OK converted!
  p = finger.fingerFastSearch();
  if (p == FINGERPRINT_OK)
  {
    Serial.println("Found a print match!");
  } else if (p == FINGERPRINT_PACKETRECIEVEERR) {
    Serial.println("Communication error");
    return p;
  } else if (p == FINGERPRINT_NOTFOUND) {
    Serial.println("Did not find a match");
    return p;
  } else {
    Serial.println("Unknown error");
    return p;
  }   
  
  // found a match!
  Serial.print("Found ID #"); Serial.print(finger.fingerID); 
  Serial.print(" with confidence of "); Serial.println(finger.confidence); 
}

// returns -1 if failed, otherwise returns ID #
int getFingerprintIDez() {
  uint8_t p = finger.getImage();
  if (p != FINGERPRINT_OK)  return -1;

  p = finger.image2Tz();
  if (p != FINGERPRINT_OK)  return -1;

  p = finger.fingerFastSearch();
  if (p != FINGERPRINT_OK)  return -1;
  
  // found a match!
  Serial.print("Found ID #"); Serial.print(finger.fingerID); 
  Serial.print(" with confidence of "); Serial.println(finger.confidence);
  return finger.fingerID; 
}